/**
 * @file dequantizer.cu
 *
 * @author Milosz Ciznicki
 */

#include "../types/image_types.h"
#include "../misc/cuda_errors.h"
extern "C"
{
#include "quantization.h"
#include "dequantizer.h"
#include "../misc/memory_management.cuh"
#include "../print_info/print_info.h"
}

/**
 * @brief Subband quantization.
 *
 * @param idata Input tile_comp_data.
 * @param size Width and height of subbnad.
 * @param step_size Step size(deltab).
 */
__global__
void subband_dequantization_lossy(int *idata, int2 isize, type_data *odata, int2 osize, int2 cblk_size, const float convert_factor)
{
	int i = threadIdx.x;
	int j = threadIdx.y;
	int n = i + blockIdx.x * cblk_size.x;
	int m = j + blockIdx.y * cblk_size.y;
	int in = n + m * isize.x;
	int out = n + m * osize.x;

	while (j < cblk_size.y && m < isize.y)
	{
		while (i < cblk_size.x && n < isize.x)
		{
			odata[out] = ((type_data) ((idata[in] >= 0) ? idata[in] : -(idata[in] & 0x7FFFFFFF))) * convert_factor;
			i += BLOCKSIZEX;
			n = i + blockIdx.x * cblk_size.x;
			in = n + m * isize.x;
			out = n + m * osize.x;
		}
		i = threadIdx.x;
		j += BLOCKSIZEY;
		n = i + blockIdx.x * cblk_size.x;
		m = j + blockIdx.y * cblk_size.y;
		in = n + m * isize.x;
		out = n + m * osize.x;
	}
}

/**
 * @brief Subband dequantization.
 *
 * @param idata Input tile_comp_data.
 * @param size Width and height of subbnad.
 * @param step_size Step size(deltab).
 */
__global__
void subband_dequantization_lossless(int *idata, int2 isize, type_data *odata, int2 osize, int2 cblk_size, const int shift_bits)
{
	int i = threadIdx.x;
	int j = threadIdx.y;
	int n = i + blockIdx.x * cblk_size.x;
	int m = j + blockIdx.y * cblk_size.y;
	int in = n + m * isize.x;
	int out = n + m * osize.x;

	while (j < cblk_size.y && m < isize.y)
	{
		while (i < cblk_size.x && n < isize.x)
		{
			odata[out] = (type_data) ((idata[in] >= 0) ? (idata[in] >> shift_bits) : -((idata[in] & 0x7FFFFFFF) >> shift_bits));
			i += BLOCKSIZEX;
			n = i + blockIdx.x * cblk_size.x;
			in = n + m * isize.x;
			out = n + m * osize.x;
		}
		i = threadIdx.x;
		j += BLOCKSIZEY;
		n = i + blockIdx.x * cblk_size.x;
		m = j + blockIdx.y * cblk_size.y;
		in = n + m * isize.x;
		out = n + m * osize.x;
	}
}

//#define TEST

#ifdef TEST
/* TEST >>*/
// man32x32.bmp
//int h_idata_ll[] = { -1868562432,-1914699776,-1751121920,-1927282688,-1981808640,-2065694720,60817408,52428800,73400320,-1755316224,-1893728256,-1998585856,148897792,270532608,-1893728256,-1730150400,-1843396608,-1855979520,-1730150400,-1952448512,-1885339648,-2065694720,39845888,60817408,408944640,-1780482048,-1885339648,-1935671296,-2061500416,-2107637760,-2048917504,-1864368128,-2027945984,-1801453568,-1889533952,-1918894080,-1902116864,-2023751680,-2099249152,186646528,169869312,-2053111808,-1772093440,-1923088384,81788928,530579456,-1952448512,-1751121920,-1835008000,-1814036480,-1805647872,-1902116864,-1860173824,-2015363072,-2065694720,23068672,-1818230784,-1574961152,-1688207360,-1663041536,-1688207360,-1998585856,-1751121920,-1704984576,-1977614336,-1897922560,-2002780160,-1931476992,-1935671296,-2002780160,-2048917504,-1897922560,-1684013056,-1767899136,-1759510528,-1931476992,69206016,-2082471936,-2036334592,39845888,-1847590912,-2141192192,-2065694720,-2002780160,-1763704832,-1910505472,-1944059904,-1822425088,-1746927616,-2023751680,-1990197248,161480704,-2032140288,-2095054848,-2103443456,-1956642816,-1855979520,-2099249152,-1818230784,-1616904192,-1730150400,-1772093440,-1881145344,-1939865600,-1793064960,-2015363072,157286400,60817408,136314880,425721856,224395264,31457280,-1805647872,-2044723200,-1805647872,-1616904192,-1948254208,-1977614336,-1855979520,-1960837120,-1839202304,-1847590912,52428800,-2048917504,140509184,421527552,10485760,27262976,-1725956096,-1952448512,-1767899136,-1642070016,-1700790272,-1822425088,-1679818752,-1981808640,-1885339648,-1977614336,165675008,165675008,157286400,44040192,358612992,0,-1902116864,-1809842176,-1692401664,-1621098496,-1742733312,-1851785216,-1801453568,-1944059904,-1969225728,-1910505472,220200960,-1868562432,140509184,169869312,123731968,-2069889024,-1776287744,-1780482048,-1776287744,-1600126976,-1923088384,-1918894080,-1956642816,-1923088384,-1793064960,-1923088384,14680064,-1788870656,27262976,165675008,-1981808640,-2136997888,-1696595968,-1725956096,-1667235840,-1553989632,304087040,379584512,476053504,-1939865600,-1642070016,-2019557376,-1868562432,-1713373184,-1969225728,-2103443456,-1746927616,-2032140288,-1663041536,-1625292800,-1637875712,-1600126976,-2099249152,-1650458624,-1805647872,-1642070016,-1637875712,-1981808640,-1725956096,-1658847232,-1583349760,-2002780160,-1742733312,-1902116864,-1608515584,-1671430144,-1608515584,-1612709888,-1851785216,-1633681408,-1658847232,-1658847232,-1654652928,-1642070016,-1650458624,-1642070016,-1637875712,-1885339648,-1700790272,-1855979520,-1608515584,-1646264320,-1616904192,-1621098496,-1616904192,-1646264320,-1650458624,-1650458624,-1667235840,-1675624448,-1855979520,-1763704832,-1738539008,-1788870656,-1688207360,-1809842176,-1625292800,-1621098496,-1625292800,-1629487104,-1629487104,-1642070016,-1650458624,-1650458624,-1684013056,-1658847232,-1759510528,-1725956096,-1684013056,-1793064960,-1868562432,-1801453568 };
//int h_idata_hl[] = {-2138046464,32505856,-2119172096,7340032,-2138046464,-2140143616,63963136,240123904,-2003828736,-2140143616,0,-2127560704,221249536,19922944,-2138046464,-2138046464,13631488,-2119172096,-2142240768,24117248,26214400,0,15728640,-2010120192,-2127560704,9437184,5242880,11534336,-2142240768,11534336,3145728,-2066743296,-2125463552,-2106589184,9437184,17825792,-2098200576,-2114977792,-2110783488,53477376,238026752,-2098200576,-2135949312,-2119172096,-2112880640,-2001731584,-2135949312,-2089811968,11534336,-2140143616,3145728,13631488,40894464,-2075131904,40894464,42991616,-2089811968,-2144337920,-2131755008,-2142240768,-2119172096,-2110783488,-2138046464,-2094006272,-2140143616,-2123366400,55574528,-2129657856,5242880,26214400,11534336,19922944,3145728,-2133852160,-2138046464,11534336,-1875902464,84934656,193986560,-1823473664,-2138046464,49283072,34603008,-2140143616,-2119172096,19922944,-2142240768,-2068840448,32505856,-2104492032,-2129657856,-2083520512,-2070937600,24117248,32505856,84934656,-2129657856,3145728,-2125463552,-2135949312,11534336,0,-2135949312,11534336,13631488,-1987051520,-2087714816,-2047868928,82837504,30408704,-2131755008,68157440,-2121269248,0,-2140143616,7340032,17825792,19922944,-2144337920,63963136,-2140143616,-2089811968,-2127560704,32505856,40894464,118489088,-2127560704,-2020605952,-2131755008,-2135949312,-2140143616,55574528,19922944,40894464,53477376,51380224,-2131755008,-2056257536,66060288,-2098200576,103809024,70254592,-2117074944,-2008023040,-2062548992,-2125463552,-2138046464,11534336,13631488,3145728,3145728,19922944,-2085617664,-2100297728,-2142240768,70254592,68157440,5242880,-2091909120,-1987051520,40894464,49283072,-2144337920,-2098200576,-2106589184,-2140143616,51380224,-2091909120,-2133852160,-2123366400,-1894776832,57671680,15728640,45088768,89128960,0,-2138046464,-2140143616,-2144337920,-2020605952,97517568,-2024800256,-2037383168,-2083520512,3145728,70254592,-2058354688,-2106589184,-2133852160,82837504,-2073034752,40894464,15728640,24117248,0,-2102394880,141557760,42991616,-2114977792,13631488,-2062548992,91226112,15728640,0,-2079326208,99614720,-2060451840,-2031091712,-2129657856,-2129657856,3145728,-2125463552,32505856,5242880,-2144337920,0,9437184,-2133852160,0,-2127560704,-2110783488,87031808,-2077229056,-2070937600,-2138046464,-2138046464,0,0,-2144337920,0,3145728,-2144337920,3145728,47185920,-2142240768,97517568,-2121269248,93323264,-2079326208,-2079326208,3145728,3145728,3145728,3145728,0,-2144337920,3145728,5242880,9437184,-2133852160,13631488,-2144337920,-2104492032,7340032,-2133852160,-2138046464};
//int h_idata_lh[] = {5242880,5242880,-2144337920,9437184,-2144337920,9437184,-2131755008,63963136,72351744,-2114977792,0,-2144337920,-2091909120,42991616,-2140143616,7340032,-2123366400,-2129657856,13631488,0,47185920,5242880,5242880,59768832,0,-2138046464,19922944,17825792,17825792,181403648,-2135949312,-2138046464,22020096,15728640,30408704,5242880,-2125463552,7340032,-2119172096,-2131755008,38797312,-2049966080,9437184,11534336,-2144337920,196083712,-2100297728,-2108686336,-2094006272,-2144337920,-2114977792,-2135949312,26214400,13631488,-2104492032,26214400,-2135949312,-2129657856,-2142240768,-2110783488,30408704,-2127560704,42991616,-2144337920,-2133852160,70254592,154140672,149946368,-2142240768,15728640,3145728,-2140143616,-2140143616,5242880,7340032,15728640,185597952,93323264,91226112,78643200,9437184,-2131755008,-2127560704,-2112880640,0,-2104492032,-2142240768,-2123366400,5242880,-2123366400,32505856,-2135949312,53477376,206569472,204472320,34603008,5242880,5242880,5242880,-2140143616,51380224,53477376,28311552,3145728,-2135949312,55574528,0,68157440,-2077229056,7340032,105906176,36700160,15728640,0,3145728,0,9437184,-2129657856,-2112880640,13631488,-2129657856,0,-2131755008,-2008023040,15728640,15728640,105906176,22020096,49283072,-2138046464,3145728,5242880,-2121269248,-2127560704,-2112880640,11534336,3145728,40894464,13631488,70254592,-2135949312,11534336,0,3145728,74448896,24117248,-2117074944,-2144337920,-2114977792,-2123366400,-2121269248,13631488,76546048,-2045771776,-2142240768,-2114977792,5242880,82837504,-1966080000,-2114977792,22020096,-2135949312,-2125463552,-2135949312,175112192,206569472,240123904,252706816,-2144337920,-2123366400,-2100297728,97517568,9437184,40894464,59768832,26214400,13631488,-2119172096,5242880,3145728,19922944,-2049966080,51380224,-2085617664,19922944,13631488,24117248,-2127560704,-2081423360,-2114977792,36700160,-2138046464,-2144337920,11534336,-2144337920,5242880,-2135949312,-2133852160,-2133852160,0,9437184,-2117074944,0,0,5242880,11534336,-2142240768,3145728,0,0,0,3145728,-2135949312,15728640,-2144337920,-2144337920,0,-2140143616,-2119172096,-2131755008,-2131755008,5242880,-2127560704,0,0,0,3145728,3145728,0,0,3145728,3145728,-2144337920,-2144337920,99614720,78643200,42991616,3145728,40894464,-2142240768,0,0,0,11534336,26214400,7340032,0,0,-2144337920,3145728,-2127560704,0,5242880,-2119172096,-2135949312,0};
//int h_idata_hh[] = {-2143813632,-2142765056,14155776,4718592,7864320,-2145910784,-2118647808,-2133327872,-2074607616,-2143813632,2621440,9961472,5767168,-2125987840,-2130182144,5767168,9961472,9961472,16252928,-2121793536,0,4718592,7864320,40370176,91750400,21495808,-2145910784,2621440,13107200,-2078801920,1572864,-2125987840,5767168,5767168,-2145910784,30932992,31981568,-2117599232,17301504,-2127036416,-2076704768,23592960,3670016,1572864,-2121793536,-2133327872,1572864,27787264,15204352,1572864,-2134376448,9961472,-2142765056,39321600,4718592,23592960,9961472,-2144862208,-2140667904,-2139619328,84410368,1572864,-2118647808,-2141716480,51904512,-2094530560,46661632,1572864,19398656,1572864,-2143813632,-2138570752,0,8912896,2621440,14155776,-2072510464,18350080,28835840,-2031616000,6815744,-2098724864,-2145910784,6815744,8912896,29884416,13107200,-2127036416,0,-2142765056,-2137522176,-2064121856,2621440,16252928,26738688,5767168,1572864,-2145910784,4718592,4718592,0,1572864,-2141716480,9961472,-2125987840,-2093481984,-2144862208,-2143813632,15204352,-2137522176,29884416,25690112,-2143813632,0,1572864,0,5767168,11010048,12058624,12058624,3670016,-2124939264,-2123890688,40370176,-2133327872,-2103967744,3670016,25690112,-2120744960,2621440,0,8912896,3670016,7864320,13107200,-2144862208,-2140667904,-2114453504,13107200,-2130182144,-2141716480,1572864,4718592,1572864,31981568,-2138570752,-2143813632,4718592,18350080,-2140667904,-2145910784,6815744,25690112,-2134376448,-2110259200,4718592,-2141716480,-2138570752,-2115502080,-2120744960,2621440,-2133327872,8912896,-2113404928,24641536,-2109210624,82313216,-2135425024,8912896,54001664,-2137522176,0,26738688,-2140667904,37224448,11010048,11010048,11010048,0,2621440,33030144,-2132279296,-2113404928,17301504,3670016,5767168,9961472,4718592,14155776,22544384,-2145910784,-2120744960,-2143813632,-2141716480,-2145910784,3670016,-2138570752,-2131230720,1572864,-2144862208,4718592,-2131230720,5767168,0,2621440,-2144862208,-2145910784,-2144862208,0,-2145910784,-2144862208,0,1572864,-2140667904,0,-2143813632,-2142765056,-2134376448,6815744,-2123890688,1572864,-2144862208,-2145910784,1572864,0,-2145910784,0,2621440,2621440,2621440,1572864,-2145910784,1572864,-2144862208,2621440,18350080,-2132279296,-2130182144,2621440,-2133327872,-2145910784,-2145910784,1572864,-2145910784,12058624,1572864,1572864,0,0,6815744,-2133327872,1572864,6815744,2621440,4718592,11010048};
// man33x33.bmp
int h_idata_ll[] = {-1872756736,-1918894080,-1746927616,-1906311168,-2002780160,-2048917504,35651584,-2090860544,320864256,-1709178880,-1860173824,-1973420032,-2095054848,467664896,-1981808640,-1763704832,-1709178880,-1843396608,-1868562432,-1725956096,-1944059904,-1889533952,-2040528896,6291456,123731968,308281344,-1931476992,-1855979520,-1918894080,-1994391552,0,-2103443456,-1981808640,-1772093440,-2019557376,-1814036480,-1864368128,-1914699776,-1927282688,-1994391552,-2090860544,144703488,153092096,199229440,-1709178880,-1876951040,-2082471936,606076928,132120576,-1906311168,-1671430144,-1864368128,-1822425088,-1814036480,-1914699776,-1826619392,-2015363072,-2015363072,6291456,-2027945984,-1545601024,-1679818752,-1679818752,-1713373184,-1935671296,-1855979520,-1692401664,-1650458624,-1944059904,-1864368128,-1918894080,-1885339648,-1927282688,-1981808640,-2095054848,-1956642816,-1751121920,-1713373184,-1721761792,-1801453568,-2132803584,-1851785216,31457280,211812352,-1730150400,-1864368128,-2099249152,-2141192192,-2103443456,-1805647872,-1923088384,-1977614336,-1910505472,-1642070016,-2011168768,-1923088384,-2141192192,165675008,-1990197248,-2023751680,-1944059904,-1897922560,-1881145344,-2048917504,-1855979520,-1633681408,-1692401664,-1704984576,-1839202304,-1948254208,-1759510528,-2011168768,-2069889024,199229440,-2078277632,400556032,497025024,148897792,65011712,-1830813696,-2011168768,-1843396608,-1608515584,-1918894080,-2002780160,-1927282688,-1927282688,-1876951040,-1906311168,-2036334592,182452224,-2136997888,262144000,232783872,-2053111808,-2099249152,-1746927616,-1935671296,-1805647872,-1633681408,-1696595968,-1902116864,-1667235840,-1918894080,-1948254208,-1860173824,0,115343360,44040192,165675008,266338304,148897792,-2095054848,-1855979520,-1801453568,-1725956096,-1629487104,-1684013056,-1872756736,-1746927616,-1923088384,-2015363072,-1889533952,119537664,18874368,18874368,132120576,144703488,85983232,-1948254208,-1872756736,-1784676352,-1772093440,-1608515584,-1725956096,-1734344704,-1767899136,-1784676352,-1864368128,-1872756736,39845888,-1763704832,-2132803584,195035136,-2132803584,-2074083328,-2002780160,-1671430144,-1746927616,-1709178880,-1562378240,90177536,564133888,379584512,274726912,-1671430144,-1855979520,-2136997888,-1663041536,-2044723200,-2141192192,-2048917504,-1973420032,73400320,-1679818752,-1637875712,-1654652928,-1570766848,-2107637760,-1767899136,-2120220672,-1595932672,-1646264320,-1897922560,-1973420032,-1637875712,-1604321280,-1818230784,-2061500416,-1688207360,-1986002944,-1621098496,-1675624448,-1616904192,-1595932672,-1914699776,-1663041536,-1650458624,-1663041536,-1667235840,-1679818752,-1696595968,-1667235840,-1637875712,-1763704832,-1960837120,-1688207360,-1902116864,-1608515584,-1658847232,-1612709888,-1616904192,-1671430144,-1667235840,-1650458624,-1658847232,-1654652928,-1654652928,-1688207360,-1650458624,-1692401664,-1684013056,-1881145344,-1642070016,-1868562432,-1616904192,-1625292800,-1621098496,-1621098496,-1608515584,-1625292800,-1650458624,-1654652928,-1671430144,-1646264320,-1893728256,-1851785216,-1876951040,-1675624448,-1897922560,-1797259264,-1772093440,-1625292800,-1625292800,-1621098496,-1642070016,-1658847232,-1658847232,-1650458624,-1654652928,-1675624448,-1675624448,-1633681408,-1650458624,-1625292800,-1692401664,-1843396608,-1809842176,-1851785216};
int h_idata_hl[] = {-2140143616,47185920,-2108686336,-2144337920,-2123366400,-2142240768,63963136,-2135949312,-1922039808,5242880,5242880,7340032,32505856,-1987051520,-2096103424,-2138046464,11534336,-2119172096,-2135949312,26214400,-2138046464,-2142240768,0,-2121269248,233832448,5242880,3145728,-2129657856,-2121269248,0,5242880,19922944,-2125463552,-2108686336,11534336,-2127560704,-2043674624,3145728,-2140143616,22020096,95420416,-1984954368,-2133852160,-2140143616,-2110783488,191889408,-2140143616,15728640,9437184,-2142240768,11534336,61865984,53477376,-2087714816,3145728,32505856,-2127560704,22020096,15728640,0,-2129657856,185597952,22020096,15728640,26214400,-2135949312,9437184,-2131755008,7340032,11534336,17825792,74448896,-2135949312,11534336,24117248,-2135949312,133169152,70254592,-1955594240,91226112,-2142240768,26214400,22020096,-2135949312,-2110783488,19922944,-2123366400,-2100297728,3145728,-2135949312,-2083520512,112197632,91226112,68157440,-2110783488,30408704,9437184,47185920,-2117074944,-2135949312,9437184,-2135949312,-2142240768,61865984,0,7340032,66060288,-2064646144,-2131755008,3145728,22020096,-2003828736,-2133852160,26214400,-2140143616,-2117074944,17825792,7340032,-2125463552,45088768,-2117074944,-2125463552,156237824,-2005925888,-2079326208,22020096,-2020605952,87031808,7340032,5242880,0,26214400,-2098200576,-2091909120,13631488,24117248,17825792,97517568,173015040,-2005925888,-2114977792,-2079326208,61865984,40894464,-2058354688,-2125463552,-2144337920,17825792,-2112880640,-2127560704,9437184,-2144337920,-2098200576,47185920,137363456,-2039480320,-2104492032,-2073034752,72351744,91226112,38797312,59768832,-2131755008,-2119172096,-2133852160,7340032,-2108686336,-2135949312,-2144337920,-2089811968,110100480,-2106589184,-2089811968,78643200,-2094006272,45088768,-2133852160,17825792,5242880,-2001731584,36700160,-2060451840,36700160,-2073034752,-2108686336,26214400,-2100297728,36700160,-2085617664,-2133852160,-2083520512,-2100297728,17825792,24117248,-2140143616,-2060451840,170917888,-1991245824,-2058354688,-2142240768,-2089811968,95420416,-2060451840,-2123366400,-2138046464,82837504,-2100297728,135266304,-2135949312,-2135949312,-2144337920,-2096103424,63963136,-2131755008,3145728,5242880,5242880,78643200,13631488,0,-2131755008,74448896,-2085617664,116391936,-2131755008,-2131755008,0,-2135949312,9437184,-2142240768,-2144337920,-2144337920,3145728,-2129657856,3145728,-2129657856,-2135949312,51380224,-2089811968,101711872,-2142240768,-2142240768,0,3145728,-2140143616,7340032,3145728,-2140143616,3145728,-2094006272,19922944,-2135949312,-2089811968,68157440,3145728,47185920,5242880,3145728,0,3145728,13631488,-2144337920,7340032,0,3145728,5242880,7340032,11534336,22020096,42991616,13631488,-2131755008};
int h_idata_lh[] = {5242880,7340032,-2142240768,0,26214400,9437184,7340032,-2142240768,99614720,-2142240768,-2133852160,0,-2108686336,-2129657856,11534336,-2138046464,30408704,-2117074944,-2140143616,5242880,7340032,26214400,28311552,7340032,13631488,49283072,5242880,5242880,13631488,-2142240768,141557760,28311552,17825792,-2114977792,34603008,17825792,32505856,0,11534336,13631488,-2104492032,36700160,53477376,-2024800256,38797312,7340032,15728640,91226112,40894464,-2123366400,-2144337920,-2112880640,-2142240768,-2123366400,5242880,24117248,7340032,-2140143616,17825792,-2127560704,-2140143616,-2140143616,-2106589184,-2083520512,93323264,55574528,7340032,15728640,63963136,32505856,99614720,74448896,-2127560704,17825792,5242880,-2140143616,-2127560704,3145728,-2144337920,0,110100480,26214400,166723584,206569472,-2096103424,22020096,-2106589184,24117248,-2085617664,9437184,-2127560704,28311552,-2133852160,-2135949312,22020096,-2144337920,45088768,-2045771776,91226112,137363456,53477376,24117248,5242880,3145728,13631488,-2131755008,22020096,53477376,28311552,0,9437184,59768832,-2133852160,28311552,-2085617664,-2094006272,-2045771776,0,61865984,7340032,3145728,3145728,-2142240768,53477376,9437184,-2114977792,3145728,13631488,-2110783488,11534336,-2035286016,5242880,22020096,24117248,59768832,-2062548992,-2127560704,9437184,3145728,3145728,-2135949312,-2144337920,-2123366400,5242880,3145728,55574528,-2117074944,187695104,-2138046464,-2135949312,-2129657856,7340032,-2096103424,-2144337920,3145728,-2110783488,-2144337920,47185920,28311552,42991616,28311552,32505856,19922944,-2142240768,-2129657856,-2142240768,49283072,-2075131904,-2119172096,5242880,-2064646144,-2138046464,30408704,0,49283072,-2119172096,24117248,-2125463552,-2117074944,13631488,30408704,-2133852160,3145728,28311552,-2070937600,38797312,42991616,-2140143616,17825792,-2144337920,-2144337920,-2133852160,158334976,34603008,-2012217344,-2131755008,32505856,-2117074944,-2142240768,-2085617664,66060288,-2127560704,-2035286016,74448896,5242880,-2133852160,3145728,5242880,-2140143616,9437184,-2068840448,9437184,0,3145728,-2142240768,5242880,5242880,-2127560704,0,-2144337920,0,0,3145728,0,-2144337920,26214400,-2138046464,3145728,3145728,-2138046464,-2144337920,-2129657856,-2135949312,0,5242880,3145728,5242880,-2144337920,-2144337920,5242880,0,3145728,-2140143616,-2133852160,0,5242880,3145728,-2142240768,53477376,-2110783488,55574528,-2119172096,-2129657856,-2108686336,15728640,3145728,-2144337920,3145728,-2142240768,-2133852160,-2144337920,0,3145728,7340032,11534336,-2094006272,-2121269248,-2089811968,15728640,13631488,5242880,15728640};
int h_idata_hh[] = {-2144862208,4718592,2621440,-2141716480,7864320,-2145910784,12058624,30932992,-2112356352,4718592,7864320,2621440,-2097676288,26738688,20447232,8912896,12058624,9961472,19398656,-2145910784,38273024,-2140667904,-2144862208,9961472,-2103967744,-2138570752,1572864,5767168,-2107113472,43515904,5767168,7864320,4718592,3670016,-2139619328,6815744,15204352,2621440,-2140667904,26738688,135790592,61341696,-2143813632,-2145910784,1572864,58195968,-2143813632,-2131230720,9961472,-2145910784,-2124939264,-2141716480,-2138570752,9961472,-2057830400,-2118647808,5767168,-2139619328,9961472,-2144862208,-2108162048,-2090336256,60293120,14155776,95944704,-2120744960,-2123890688,2621440,25690112,0,8912896,-2125987840,4718592,3670016,14155776,-2122842112,11010048,30932992,-2077753344,1572864,17301504,-2100822016,-2107113472,8912896,14155776,28835840,-2134376448,-2121793536,3670016,-2136473600,-2139619328,84410368,-2134376448,-2137522176,3670016,-2050490368,0,-2144862208,1572864,-2142765056,1572864,5767168,-2142765056,0,-2119696384,13107200,20447232,16252928,-2128084992,-2115502080,44564480,-2127036416,-2143813632,0,1572864,-2135425024,15204352,-2140667904,3670016,-2145910784,17301504,-2137522176,41418752,12058624,1572864,21495808,18350080,21495808,12058624,0,0,4718592,-2142765056,-2141716480,5767168,-2145910784,-2145910784,11010048,-2100822016,-2123890688,2621440,-2121793536,-2134376448,19398656,-2142765056,-2109210624,3670016,-2138570752,13107200,7864320,-2145910784,0,-2123890688,-2129133568,-2116550656,-2142765056,-2141716480,51904512,7864320,13107200,-2121793536,-2137522176,-2142765056,-2124939264,-2095579136,-2143813632,-2069364736,-2135425024,-2119696384,-2113404928,0,-2135425024,1572864,18350080,-2143813632,-2114453504,-2137522176,-2134376448,-2142765056,0,-2116550656,36175872,-2138570752,-2140667904,-2142765056,-2145910784,12058624,-2123890688,17301504,8912896,-2113404928,6815744,4718592,4718592,0,2621440,-2139619328,24641536,20447232,2621440,5767168,58195968,12058624,4718592,5767168,14155776,-2134376448,-2145910784,-2145910784,0,2621440,-2141716480,2621440,4718592,-2144862208,0,-2142765056,-2131230720,-2142765056,5767168,2621440,5767168,3670016,-2141716480,0,0,2621440,1572864,-2143813632,4718592,0,2621440,0,-2134376448,-2142765056,-2133327872,-2129133568,-2116550656,-2136473600,9961472,2621440,2621440,0,0,-2139619328,0,-2145910784,1572864,1572864,14155776,4718592,-2143813632,18350080,15204352,2621440,-2138570752};
/* TEST <<*/
#endif

type_subband *dequantization(type_subband *sb)
{
	dim3 blocks;
	dim3 threads;
	cudaError_t error;

	type_res_lvl *res_lvl = sb->parent_res_lvl;
	type_tile_comp *tile_comp = res_lvl->parent_tile_comp;
	type_image *img = tile_comp->parent_tile->parent_img;
	float convert_factor;
	int shift_bits;
	int max_res_lvl;
	int i;

	/* Lossy */
	if (img->wavelet_type)
	{
		/* Max resolution level */
		max_res_lvl = tile_comp->num_dlvls;
		/* Relative dequantization step size. Step size is signaled relative to the wavelet coefficient bit depth. */
		convert_factor = sb->step_size
				* ((type_data)(1 << (img->num_range_bits + get_exp_subband_gain(sb->orient) + max_res_lvl - res_lvl->dec_lvl_no)));
		shift_bits = 31 - sb->mag_bits;

		convert_factor = convert_factor / ((type_data)(1 << shift_bits));

		sb->convert_factor = convert_factor;

//		println_var(INFO, "Lossy mag_bits:%d convert_factor:%0.16f shift_bits:%d step_size:%f subband_gain:%d", sb->mag_bits, /*sb->step_size
//				* ((type_data)(1 << (img->num_range_bits + get_exp_subband_gain(sb->orient) + max_res_lvl - res_lvl->dec_lvl_no)))*/sb->convert_factor, shift_bits, sb->step_size, get_exp_subband_gain(sb->orient));

	} else /* Lossless */
	{
		shift_bits = 31 - sb->mag_bits;
		sb->convert_factor = 1 << shift_bits;
//		printf("%d\n", shift_bits);
	}

	cuda_d_allocate_mem((void **) &(sb->cblks_data_d), sb->width * sb->height/*sb->num_cblks * tile_comp->cblk_w * tile_comp->cblk_h*/ * sizeof(int32_t));

//		printf("%d %d %d\n", sb->num_cblks, tile_comp->cblk_w, tile_comp->cblk_h);
	int32_t *dst;

	for (i = 0; i < sb->num_cblks; i++)
	{
		type_codeblock *cblk = &(sb->cblks[i]);
//				printf("%d %d %d %d %d %d %d\n", cblk->tlx, cblk->tly, cblk->width, cblk->height, sb->width, sb->height, cblk->tlx + cblk->tly * sb->width);
		dst = sb->cblks_data_d + cblk->tlx + cblk->tly * sb->width;
		cuda_memcpy2d_dtd(cblk->data_d, /*cblk->width*/tile_comp->cblk_w * sizeof(int32_t), dst, sb->width * sizeof(int32_t), cblk->width * sizeof(int32_t),
				cblk->height);

		cuda_d_free(cblk->data_d);
	}

	/* Input and output data */
	// TODO idata, odata
	//	int *idata = tile_comp->img_data_d + sb->tlx + sb->tly * tile_comp->width;
#ifdef TEST
	/* TEST >>*/
	printf("sb->orient %d %d %d\n", sb->orient, sb->tlx, sb->tly);
	int * h_idata;
	switch(sb->orient)
	{
	case LL: h_idata = h_idata_ll; break;
	case HL: h_idata = h_idata_hl; break;
	case LH: h_idata = h_idata_lh; break;
	case HH: h_idata = h_idata_hh; break;
	}

	cuda_memcpy2d_htd(h_idata, sb->width * sizeof(int), sb->cblks_data_d, sb->width * sizeof(int), sb->width * sizeof(int), sb->height);
	/* TEST <<*/
#endif

	int *idata = sb->cblks_data_d;
	type_data *odata = tile_comp->img_data_d + sb->tlx + sb->tly * tile_comp->width;
	int2 isize = make_int2(sb->width, sb->height);
	int2 osize = make_int2(tile_comp->width, tile_comp->height);
	int2 cblk_size = make_int2(tile_comp->cblk_w, tile_comp->cblk_h);

	/* Number of blocks for parallel reduction */
	blocks = dim3(sb->num_xcblks, sb->num_ycblks);
	/* Number of threads for parallel reduction */
	threads = dim3(BLOCKSIZEX, BLOCKSIZEY);

	if (img->wavelet_type)
	{
		subband_dequantization_lossy<<<blocks, threads>>>(idata, isize, odata, osize, cblk_size, sb->convert_factor);
	} else
	{
		subband_dequantization_lossless<<<blocks, threads>>>(idata, isize, odata, osize, cblk_size, shift_bits);
	}

#ifdef TEST
	/* TEST >>*/
	type_data *h_sb_o;
	int *h_sb_i;

	h_sb_i = (int *) malloc(sb->width * sb->height * sizeof(int));
	h_sb_o = (type_data *) malloc(sb->width * sb->height * sizeof(type_data));

	cuda_memcpy2d_dth(idata, sb->width * sizeof(int), h_sb_i, sb->width * sizeof(int), sb->width * sizeof(int), sb->height);
	cuda_memcpy2d_dth(odata, tile_comp->width * sizeof(type_data), h_sb_o, sb->width * sizeof(type_data), sb->width * sizeof(type_data), sb->height);

	int k, l;

	for(k = 0; k < sb->height; k++)
	{
		for(l = 0; l < sb->width; l++)
		{
//			printf("%d,%f\n", h_sb_i[l + k * sb->width], h_sb_o[l + k * sb->width]);
		}
	}
	/* TEST <<*/
#endif

	cudaThreadSynchronize();

	// error report
	if (error = cudaGetLastError())
	printf("Error %s\n", cudaGetErrorString(error));

	cuda_d_free(sb->cblks_data_d);

	return sb;
}

/**
 * @brief Do dequantization for every subbands from tile.
 * @param tile
 */
void dequantize_tile(type_tile *tile)
{
	//	println_start(INFO);

	//	start_measure();

	type_image *img = tile->parent_img;
	type_tile_comp *tile_comp;
	type_res_lvl *res_lvl;
	type_subband *sb;
	int i, j, k;

	for (i = 0; i < img->num_components; i++)
	{
		tile_comp = &(tile->tile_comp[i]);
		for (j = 0; j < tile_comp->num_rlvls; j++)
		{
			res_lvl = &(tile_comp->res_lvls[j]);
			for (k = 0; k < res_lvl->num_subbands; k++)
			{
				sb = &(res_lvl->subbands[k]);
				dequantization(sb);
			}
		}
	}

//	save_img(img, "dwt.bmp");

	//	stop_measure(INFO);

	//	println_end(INFO);
}
